# -- coding: utf-8 -
"""
@file       :webdriver.txt
@Author     :wooght
@Date       :2024/5/13 15:22
"""
"""
    chromedriver下载地址:
    https://googlechromelabs.github.io/chrome-for-testing/
"""

要导入的包
    from selenium import webdriver
    from selenium.webdriver.chrome.options import Options
    from selenium.webdriver.common.by import By


配置webdriver
    options = Options()
    options.add_argument('--headless')              # 开启无头模式
    options.add_argument('--disable-gpu')
    options.add_argument('--window-size=1600,900')  # 窗口尺寸
    options.add_argument('lang=zh-CN.UTF-8')        # 设置语言
    options.add_argument("lang=zh_CN.UTF-8")        # 编码
    options.add_argument("--no-sandbox")            # 沙盒模式
    options.add_argument('blink-settings=imagesEnabled=false')  # 不加载图片
    options.add_argument('log-level=3')             # 设置日志级别   INFO:0,WARNING:1,LOG_ERROR:2,LOG_FATAL:3
    prefs = {
        'profile.default_content_settings.popups': 0,  # 禁止弹出下载窗口
        'download.default_directory': 'downfile',   # 下载目录
    }
    options.add_experimental_option('prefs', prefs)
    options.add_argument('--proxy-server=http://ip:端口')  # 设置代理IP
    self.options.add_experimental_option('detach', True)  # 保持打开状态
    # 以下两个方法 屏蔽浏览器页头:自动化测试控制
    options.add_experimental_option('useAutomationExtension', False)  # 停用开发者模式
    options.add_experimental_option('excludeSwitches', ['enable-automation'])
    options.add_argument('--disable-infobars') # 禁止提示自动化运行

启动webdriver
    driver = webdriver.Chrome(options=options)      # 启动chrome webdriver
访问地址
    driver.implicitly_wait(S)                       # 隐式等待加载网页最大时间
    driver.set_page_load_timeout(S)                 # 设置超时时间    超时会抛出 TimeoutException
    result = driver.get('http://www.baidu.com')
    # 显示等待元素载入
        WebDriverWait(driver, 10).until(presence_of_element_located((By.XPATH, '/html/head/title')))

    driver.page_source()                            # 获取返回网页内容
    driver.page_source()                            # 获取返回网页内容
    # 查找元素,并点击
    driver.find_element(By.XPATH, '/html/body/div[4]/div/a[3]').click()
    handle[0] = driver.current_window_handle        # 当前窗口
    driver.switch_to.window(handle[0])              # 切换窗口
    driver.switch_to_default_content()              # 切换会父框架 iframe情况使用
    driver.execute_script('js语句')                   # 运行JS
        # 返回状态码
        status = driver.execute_script("return {httpStatus: document.httpStatus, status: document.status};"))

    driver.save_screenshot('screenshot.png')        # 窗口截图

Cookie
    driver.get_cookies()                             # 获取COOKIE
        COOKIE格式:[
            {'domain':'','expiry':175130000, 'httpOnly':False/True, 'name':'cookie_name', 'path':'/', 'sameSite':'Lax', 'secure':False, 'value':'cookie_value'},
            {},...
        ]
    driver.add_cookie({'name':'cookie_name', 'value':'cookie_value'})   # 设置COOKIE  设置前需访问一次网页,设置后再访问一次才能设置成功


关闭/停止webdriver
    driver.close()      # 关闭窗口
    driver.quit()       # 关闭浏览器 chrome